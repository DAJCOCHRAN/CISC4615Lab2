#include <unistd.h>
#include <iostream>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <ctime>


using namespace std;


int main(int argc, char **argv)
{
    if(argc != 3){
        cout<<"Useage ./inbet <messagePortToClient> <messagePortToServer>"<<endl;
        exit(0);
    }
    int sockfd = socket(PF_INET, SOCK_DGRAM, 0);
        struct sockaddr_in servaddr;
         bzero(&servaddr, sizeof(servaddr));
         servaddr.sin_family = AF_INET;
         servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
         servaddr.sin_port = htons(atoi(argv[1]));
    int sockfd2= socket(AF_INET, SOCK_DGRAM, 0);
        struct sockaddr_in servaddr2;
        memset(&servaddr2, 0, sizeof(servaddr2));
        servaddr2.sin_family = AF_INET;
        servaddr2.sin_addr.s_addr = htonl(INADDR_ANY);
        servaddr2.sin_port = htons(atoi(argv[2]));

    bind(sockfd, (struct sockaddr *)&servaddr, sizeof(servaddr)); // Client message
    bind(sockfd2, (struct sockaddr *)&servaddr2, sizeof(servaddr2)); // Server Message

    char recvline[1024], sendline[1024];

    cout<<"Wating... " << endl;


    while(1)
    {

                               //store message in message variable
                memset(recvline,0,1024);
                recvfrom(sockfd, recvline, 1024, 0, NULL, NULL);

                sendto(sockfd2,recvline, strlen(recvline), 0, (struct sockaddr *)&servaddr2, sizeof(servaddr2));

                if(strcmp(recvline,"bye") == 0)
                {
                        break;
                }



    }
    close(sockfd); // end of server side of app
    close(sockfd2);
}
