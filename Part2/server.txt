#include <unistd.h>
#include <iostream>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <cstring>
#include "crc.cpp"

using namespace std;
int main(int argc, char **argv)
{
    if(argc != 2){
        cout<<"Useage ./server <port>"<<endl;
        exit(0);
    }
    int sockfd;
    struct sockaddr_in servaddr;
    sockfd = socket(PF_INET, SOCK_DGRAM, 0);
    bzero(&servaddr, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
    servaddr.sin_port = htons(atoi(argv[1]));
    bind(sockfd, (struct sockaddr *)&servaddr, sizeof(servaddr));
    char recvline[1024], mesg[1024], hex[20] ;

    cout<<"Wating...."<<endl;
    char n;
    while(1)
    {
        struct crc_sample sample;
        memset(sample.str,0,50);
        n = 'a';
        if(n = 'a')// hex code comes here
        {
        memset(recvline,0,1024);
        recvfrom(sockfd, recvline, 1024, 0, NULL, NULL);
        for (int i = 0; i < strlen(recvline); i++)
                hex[i] = recvline[i]; // replaced for loop
        cout << "The hex code stored in the server is" << hex << endl;


        if(strcmp(recvline,"bye") == 0)
        {
            break;
        }
        n = 'b';
        }

           if(n = 'b')// message comes here
        {
        memset(recvline,0,1024);
        recvfrom(sockfd, recvline, 1024, 0, NULL, NULL);
       for (int i = 0; i < strlen(recvline); i++)
                mesg[i] = recvline[i];

        sample.crc = crc32(mesg, strlen(mesg));
        char crc[20];
        sprintf(crc,"%X", sample.crc);

        for(int i = 0; i < strlen(crc); i++)
        {
                if (crc[i] != hex[i])
                {
                        cout << "The message has an error from CRC check!" << endl;
                        break;
                }
        }


        cout << "Your hexcode generated from the server's client message is " << crc <<  endl;
        cout << "The message from the client is " << mesg << endl;
        cout << "The original hexcode was " << hex  << endl;

        if(strcmp(recvline,"bye") == 0)
        {
            break;
        }

        }
           bzero(hex, sizeof(hex));
           bzero(mesg, sizeof(mesg));


    }
    close(sockfd);
}
